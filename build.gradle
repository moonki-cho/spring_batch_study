plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'org.study'
version = '0.0.1-SNAPSHOT'

java {  // 빌드와 관련된 java 설정 정의
    toolchain { // 프로젝트에서 특정 Java 버전을 사용하도록 명시
        languageVersion = JavaLanguageVersion.of(17) //java 버전 22로 빌드 및 컴파일
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.mybatis.org/maven2/" }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa' // JPA 실습을 위해 추가
    implementation 'org.springframework.boot:spring-boot-starter-batch' // spring batch 관련 의존성
    implementation 'com.h2database:h2:2.2.224' // H2 database 의존성 추가
    implementation 'org.projectlombok:lombok:1.18.34' // log 출력을 위해 lombok 추가
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.batch:spring-batch-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'
    implementation 'org.mybatis:mybatis-spring:3.0.0'
    implementation 'com.querydsl:querydsl-apt:5.0.0'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    implementation 'com.querydsl:querydsl-core:5.0.0'

    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"

    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

tasks.named('test') {
    useJUnitPlatform() // JUnit5 플랫폼을 사용하도록 설정
}

def generated = 'src/main/generated'

// querydsl QClass 파일 생성 위치를 지정
tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// java source set 에 querydsl QClass 위치 추가
sourceSets {
    main.java.srcDirs += [ generated ]
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
    delete file(generated)
}
